// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  email         String    @unique
  image         String?
  gender        Int? // 0 = female, 1 = male
  date_of_birth DateTime?
  bio           String?
  is_verified   Boolean   @default(false)
  // followed_by   User[]    @relation("UserFollows", references: [id])
  // following     User[]    @relation("UserFollows", references: [id])
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  otp           Otp?
  post          Post[]
}

model Otp {
  id         Int      @id @default(autoincrement())
  otp        Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_id Int  @unique
  user    User @relation(fields: [user_id], references: [id])
}

model Post {
  id          Int       @id @default(autoincrement())
  image       String
  description String?
  likes       Int       @default(0)
  comment     Comment[]
  user_id     Int       @unique
  user        User      @relation(fields: [user_id], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Comment {
  id      Int    @id @default(autoincrement())
  comment String
  postId  Int
  Post    Post   @relation(fields: [postId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
